// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Server.Data;

#nullable disable

namespace DBBroker.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Common.Domain.Klijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BrojTelefona")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Klijenti");
                });

            modelBuilder.Entity("Common.Domain.Licenca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Institucija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kategorija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Licence");
                });

            modelBuilder.Entity("Common.Domain.Majstor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specijalizacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Majstori");
                });

            modelBuilder.Entity("Common.Domain.MajstorLicenca", b =>
                {
                    b.Property<int>("MajstorId")
                        .HasColumnType("int");

                    b.Property<int>("LicencaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.HasKey("MajstorId", "LicencaId");

                    b.HasIndex("LicencaId");

                    b.ToTable("MajstorLicence");
                });

            modelBuilder.Entity("Common.Domain.Marka", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Marke");
                });

            modelBuilder.Entity("Common.Domain.ModelVozila", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MarkaId")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MarkaId");

                    b.ToTable("ModeliVozila");
                });

            modelBuilder.Entity("Common.Domain.Servis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatumPrijema")
                        .HasColumnType("datetime2");

                    b.Property<int>("MajstorId")
                        .HasColumnType("int");

                    b.Property<string>("OpisProblema")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("UkupnaCena")
                        .HasColumnType("float");

                    b.Property<string>("VoziloRegBroj")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("MajstorId");

                    b.HasIndex("VoziloRegBroj");

                    b.ToTable("Servisi");
                });

            modelBuilder.Entity("Common.Domain.StavkaServisa", b =>
                {
                    b.Property<int>("Rb")
                        .HasColumnType("int");

                    b.Property<int>("ServisId")
                        .HasColumnType("int");

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Napomena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UslugaId")
                        .HasColumnType("int");

                    b.HasKey("Rb", "ServisId");

                    b.HasIndex("ServisId");

                    b.HasIndex("UslugaId");

                    b.ToTable("StavkeServisa");
                });

            modelBuilder.Entity("Common.Domain.Usluga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Cena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usluge");
                });

            modelBuilder.Entity("Common.Domain.Vozilo", b =>
                {
                    b.Property<string>("RegBroj")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("GodinaProizvodnje")
                        .HasColumnType("int");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("ModelVozilaId")
                        .HasColumnType("int");

                    b.HasKey("RegBroj");

                    b.HasIndex("KlijentId");

                    b.HasIndex("ModelVozilaId");

                    b.ToTable("Vozila");
                });

            modelBuilder.Entity("Common.Domain.MajstorLicenca", b =>
                {
                    b.HasOne("Common.Domain.Licenca", "Licenca")
                        .WithMany("MajstorLicenca")
                        .HasForeignKey("LicencaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Common.Domain.Majstor", "Majstor")
                        .WithMany("MajstorLicenca")
                        .HasForeignKey("MajstorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Licenca");

                    b.Navigation("Majstor");
                });

            modelBuilder.Entity("Common.Domain.ModelVozila", b =>
                {
                    b.HasOne("Common.Domain.Marka", "Marka")
                        .WithMany("Modeli")
                        .HasForeignKey("MarkaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marka");
                });

            modelBuilder.Entity("Common.Domain.Servis", b =>
                {
                    b.HasOne("Common.Domain.Majstor", "Majstor")
                        .WithMany("Servisi")
                        .HasForeignKey("MajstorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Common.Domain.Vozilo", "Vozilo")
                        .WithMany()
                        .HasForeignKey("VoziloRegBroj")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Majstor");

                    b.Navigation("Vozilo");
                });

            modelBuilder.Entity("Common.Domain.StavkaServisa", b =>
                {
                    b.HasOne("Common.Domain.Servis", "Servis")
                        .WithMany("Stavke")
                        .HasForeignKey("ServisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Common.Domain.Usluga", "Usluga")
                        .WithMany("StavkeServisa")
                        .HasForeignKey("UslugaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Servis");

                    b.Navigation("Usluga");
                });

            modelBuilder.Entity("Common.Domain.Vozilo", b =>
                {
                    b.HasOne("Common.Domain.Klijent", "Klijent")
                        .WithMany("Vozila")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Common.Domain.ModelVozila", "ModelVozila")
                        .WithMany("Vozila")
                        .HasForeignKey("ModelVozilaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klijent");

                    b.Navigation("ModelVozila");
                });

            modelBuilder.Entity("Common.Domain.Klijent", b =>
                {
                    b.Navigation("Vozila");
                });

            modelBuilder.Entity("Common.Domain.Licenca", b =>
                {
                    b.Navigation("MajstorLicenca");
                });

            modelBuilder.Entity("Common.Domain.Majstor", b =>
                {
                    b.Navigation("MajstorLicenca");

                    b.Navigation("Servisi");
                });

            modelBuilder.Entity("Common.Domain.Marka", b =>
                {
                    b.Navigation("Modeli");
                });

            modelBuilder.Entity("Common.Domain.ModelVozila", b =>
                {
                    b.Navigation("Vozila");
                });

            modelBuilder.Entity("Common.Domain.Servis", b =>
                {
                    b.Navigation("Stavke");
                });

            modelBuilder.Entity("Common.Domain.Usluga", b =>
                {
                    b.Navigation("StavkeServisa");
                });
#pragma warning restore 612, 618
        }
    }
}
